nginx:
  template: nginx
  config:
    image: nginx

localstack:
  template: localstack
  config:
    image: localstack/localstack
    ports:
     - { port: 4572, wait: yes }
  environment:
    services: s3:4572,lambda:4574,sns:4575,sqs:4576
    port_web_ui: 8080
    debug: s3
    hostname: localstack
    hostname_external: localstack

redis:
  template: redis
  tags:
    name: cool
  config:
    shell_command: sh
    ports:
      - { port: 6379, wait: yes }
# services.yml
# ---
# sftp:
#   tags: core, storage

DEFAULTS: &base_service
  type: Service::Rails
  profiles: &base_profiles
    server: '["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-P", "/tmp/server.pid"]'
    scheduler: '["bundle", "exec", "rails", "runner", "./lib/scheduler.rb"]'
    worker: '["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]' # for non cnfs services
  config: &base_config
    image_repository: railsonservices
    # TODO: read image_tag version from somewhere
    # like File.read('path to version file')
    # image_tag: '0.1.0-{service.git.branch_name}-{service.git.sha}'
    image_tag: '0.1.0-git-sha'
    # image_tag: '0.1.0-{service.git.sha}-{service.git.sha}'
    console_command: rails console
    shell_command: bash
    database_seed_commands:
      - rails app:ros:db:reset:seed # non cnfs services
      # - rails ros:db:reset:seed # non cnfs services
    test_commands:
      - bundle exec rubocop
      - rails db:test:prepare
      - bin/spring rspec # NOTE: missing options
    image_gems:
      bundler: 2.0.1
      eventmachine: 1.2.7
      ffi: 1.10.0
      mini_portile2: 2.4.0
      msgpack: 1.2.10
      nio4r: 2.3.1
      nokogiri: 1.10.4
      pg: 1.1.4
      puma: 3.12.1
    build_args:
      rails_env: development
      bundle_string: --without production
      os_packages: ['libpq5', 'tree', 'curl', 'git', 'sudo', 'vim', 'less', 'tcpdump', 'net-tools', 'iputils-ping', 'graphviz']
      source_path: ros
      # target_path: ../..

  environment: &base_environment
    rails_database_host: postgres
    rails_database_user: admin
    rails_database_password: admin
    platform:
      api_docs:
        server:
          host: 'https://api.{domain}'
      connection:
        type: host
        external_connection_type: path
        # feature_set: mounted
        hosts: 'api.{domain}'
      jwt:
        aud: 'https://api.{domain}'
        iss: 'https://iam.api.{domain}'
      partition_name: what
      postman:
        workspace: 'api.{domain}'
      storage:
        image:
          services: ['images']
        app:
          services: ['documents', 'reports', 'sftp']

iam:
  <<: *base_service

cognito:
  <<: *base_service

postgres:
  template: postgres
  config:
    ports:
      - { port: 5432, wait: yes }
  environment:
    postgres_user: admin
    postgres_password: admin
    postgres_db: postgres
